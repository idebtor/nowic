# a makefile example using multiple libraries and include 
# 
# Created by idebtor@gmail.com
#
# $@ The name of the EXEC file (the one before the colon)
# $< The name of the first (or only) prerequisite file (the first one after the colon)
# $^ The names of all the prerequisite files (space separated)
#
CC = g++
LIBDIR = ../../lib
INCDIR = ../../include
CCFLAGS = -std=c++11 -Wall -g 
#CCFLAGS += -DDEBUG        # uncomment for debugging
ifeq ($(OS),Windows_NT)
	LDFLAGS = -L$(LIBDIR) -lnowic -lsort -lrand
else
	LDFLAGS = -L$(LIBDIR) -lnowic_mac -lsort_mac -lrand_mac
endif

$(info )
$(info To use main() in driver.cpp with profilie.cpp or profiling.cpp,)
$(info turn off, set #if 0, just above main() in profile.cpp or profiling.cpp)
$(info )
SRC3 = profile.cpp driver.cpp 
OBJ3 = $(SRC3:.cpp=.o)
EXE3 = driver

# rule for link
all: $(EXE3) 

$(EXE3): $(OBJ3)
	$(CC) -o $@ $^ $(LDFLAGS)

# rule for compilation
%.o: %.cpp
	$(CC) $(CCFLAGS) -c -I$(INCDIR) $<

.PHONY: all clean install
clean:
	rm -f *.o *.exe $(OBJ3) $(EXE3)

TARGET_PATH = ..\\..\\..\\nowic\\psets\\pset4
install:
ifeq ($(OS),Windows_NT)
	mkdir -p ./deliverable && \
	cp profiling.pdf profilingENG.pdf makefile make.driver $(EXE3).exe ./deliverable
	cp profiling.cpp ./deliverable
	mkdir -p $(TARGET_PATH) && cp -v deliverable/* $(TARGET_PATH)
	xcopy .vscode $(TARGET_PATH)\.vscode //E //H //K //Y //I 
else
	cp $(EXE3) ./deliverable
	cp -v $(EXE3) $(TARGET_PATH)
endif

